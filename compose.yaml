services:
  db:
    build: ./database
    image: neillhas2ls/2ls_flow_apps:fa-tickets-database
    container_name: fa-app-tickents-database
    labels:
      - "app=fa-tickets"
      - "service=database"
      - "version=1.0"
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: fa_tickets
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d fa_tickets"]
      interval: 5s
      timeout: 5s
      retries: 10
  app:
    build: ./backend
    image: neillhas2ls/2ls_flow_apps:fa-tickets-backend
    container_name: fa-app-tickents-backend
    labels:
      - "app=fa-tickets"
      - "service=backend"
      - "version=1.0"
    environment:
      DATABASE_URL: postgresql+psycopg://app:app@db:5432/fa_tickets
      BACKEND_PORT: "8000"
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
  frontend:
    build: ./frontend
    image: neillhas2ls/2ls_flow_apps:fa-tickets-frontend
    container_name: fa-app-tickents-frontend
    labels:
      - "app=fa-tickets"
      - "service=frontend"
      - "version=1.0"
    environment:
      BACKEND_ORIGIN: http://app:8000
    ports:
      - "3000:3000"
    depends_on:
      - app
